{"ast":null,"code":"var _jsxFileName = \"/Users/demir/mevlus/mppsc/src/components/AvailableTest.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Question from './Question.js';\nimport Options from './Options.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet data = require('../data'); //this imports data from local file, pass it as a prop to Quiz component\n\n\nconst shuffleArray = array => {\n  let i = array.length - 1;\n\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n};\n\nclass AvailableTest extends React.PureComponent {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      data: \"\"\n    };\n    this.loadQuestionsFromServer = this.loadQuestionsFromServer.bind(this);\n  }\n\n  loadQuestionsFromServer() {\n    fetch(this.props.url).then(res => res.json()).then(data => {\n      this.setState({\n        data\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.loadQuestionsFromServer();\n  }\n\n  resetOptionColor() {\n    document.getElementById(\"1\").className = \"strong options\";\n    document.getElementById(\"2\").className = \"strong options\";\n    document.getElementById(\"3\").className = \"strong options\";\n    document.getElementById(\"4\").className = \"strong options\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"HEllo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nAvailableTest.PropTypes = {\n  books: PropTypes.bool.isRequired\n};\n/*Book.PropTypes = {\n\tb: PropTypes.string\n}\n*/\n\nexport default AvailableTest;","map":{"version":3,"sources":["/Users/demir/mevlus/mppsc/src/components/AvailableTest.js"],"names":["React","PropTypes","Link","Question","Options","data","require","shuffleArray","array","i","length","j","Math","floor","random","temp","AvailableTest","PureComponent","constructor","props","context","state","loadQuestionsFromServer","bind","fetch","url","then","res","json","setState","componentWillMount","resetOptionColor","document","getElementById","className","render","books","bool","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,OAAP,MAAoB,cAApB;;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,SAAD,CAAlB,C,CAA+B;;;AAE/B,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC7B,MAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAvB;;AACA,SAAOD,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;AAClB,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,UAAMM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAlB;AACAD,IAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACAH,IAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACA;;AACD,SAAOP,KAAP;AACA,CATD;;AAWA,MAAMQ,aAAN,SAA4BhB,KAAK,CAACiB,aAAlC,CAA+C;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACZhB,MAAAA,IAAI,EAAC;AADO,KAAb;AAGH,SAAKiB,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BC,IAA7B,CAAkC,IAAlC,CAA/B;AACA;;AACDD,EAAAA,uBAAuB,GAAG;AACzBE,IAAAA,KAAK,CAAC,KAAKL,KAAL,CAAWM,GAAZ,CAAL,CACEC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAEOrB,IAAI,IAAE;AACR,WAAKwB,QAAL,CAAc;AAAExB,QAAAA;AAAF,OAAd;AACH,KAJF;AAKG;;AAEJyB,EAAAA,kBAAkB,GAAG;AACpB,SAAKR,uBAAL;AACG;;AAEJS,EAAAA,gBAAgB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,GAAxB,EAA6BC,SAA7B,GAAyC,gBAAzC;AACAF,IAAAA,QAAQ,CAACC,cAAT,CAAwB,GAAxB,EAA6BC,SAA7B,GAAyC,gBAAzC;AACAF,IAAAA,QAAQ,CAACC,cAAT,CAAwB,GAAxB,EAA6BC,SAA7B,GAAyC,gBAAzC;AACAF,IAAAA,QAAQ,CAACC,cAAT,CAAwB,GAAxB,EAA6BC,SAA7B,GAAyC,gBAAzC;AACA;;AAGDC,EAAAA,MAAM,GAAI;AACH,wBAAS;AAAA,6BAET;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFS;AAAA;AAAA;AAAA;AAAA,YAAT;AAUN;;AAvC6C;;AA2C/CnB,aAAa,CAACf,SAAd,GAA0B;AACzBmC,EAAAA,KAAK,EAAEnC,SAAS,CAACoC,IAAV,CAAeC;AADG,CAA1B;AAGC;AACD;AACA;AACA;;AACA,eAAetB,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Question from './Question.js';\nimport Options from './Options.js';\nlet data = require('../data'); //this imports data from local file, pass it as a prop to Quiz component\n\nconst shuffleArray = array => {\n\tlet i = array.length - 1;\n\tfor (; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n\treturn array;\n}\n\nclass AvailableTest extends React.PureComponent{\n\tconstructor(props, context) {\n\t    super(props, context);\n\t    this.state = {\n\t    \tdata:\"\"\n\t    }\n\t\tthis.loadQuestionsFromServer = this.loadQuestionsFromServer.bind(this);\n\t}\n\tloadQuestionsFromServer() {\n\t\tfetch(this.props.url)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data=>{\n\t\t    \tthis.setState({ data });\n\t\t\t})\n    }\n\n\tcomponentWillMount() {\n\t\tthis.loadQuestionsFromServer();\n    }\n\n\tresetOptionColor() {\n\t\tdocument.getElementById(\"1\").className = \"strong options\";\n\t\tdocument.getElementById(\"2\").className = \"strong options\";\n\t\tdocument.getElementById(\"3\").className = \"strong options\";\n\t\tdocument.getElementById(\"4\").className = \"strong options\";\n\t}\n\n\t\n\trender () { \n        return \t <div> \n\t\n        <p>HEllo</p>\n\n\n\n\n            \n\t\t\t\n\t\t</div>; \n\t}\n}\n\n\nAvailableTest.PropTypes = {\n\tbooks: PropTypes.bool.isRequired,\n }\n /*Book.PropTypes = {\n \tb: PropTypes.string\n }\n*/\nexport default AvailableTest;"]},"metadata":{},"sourceType":"module"}