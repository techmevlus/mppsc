{"ast":null,"code":"var _jsxFileName = \"/Users/demir/mevlus/react-javascript-quiz-app/src/components/Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Question from './Question.js';\nimport Options from './Options.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet data = require('../data'); //this imports data from local file, pass it as a prop to Quiz component\n\n\nconst shuffleArray = array => {\n  console.log(\"hello deep\");\n  let i = array.length - 1;\n\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n};\n\nclass Quiz extends React.PureComponent {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      data: \"\"\n    };\n    this.loadQuestionsFromServer = this.loadQuestionsFromServer.bind(this);\n  }\n\n  loadQuestionsFromServer() {\n    fetch(this.props.url).then(res => res.json()).then(data => {\n      this.setState({\n        data\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.loadQuestionsFromServer();\n  }\n\n  render() {\n    if (this.state.data === \"\" || this.state.data === undefined || this.state.data === null) {\n      return false;\n    }\n\n    var shuffledPosts = shuffleArray(this.state.data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row posRelative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-10\",\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            data: shuffledPosts[0].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Options, {\n          data: shuffledPosts[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-10 noPad\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"marTop25 nextBtn btn pull-right\",\n            children: \"Next Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/addQuestion\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"marTop25 nextBtn btn pull-left\",\n            children: \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this);\n  }\n\n} // Quiz.PropTypes = {\n// \tbooks: PropTypes.bool.isRequired,\n// }\n// Book.PropTypes = {\n// \tb: PropTypes.string\n// }\n\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/demir/mevlus/react-javascript-quiz-app/src/components/Quiz.js"],"names":["React","PropTypes","Link","Question","Options","data","require","shuffleArray","array","console","log","i","length","j","Math","floor","random","temp","Quiz","PureComponent","constructor","props","context","state","loadQuestionsFromServer","bind","fetch","url","then","res","json","setState","componentWillMount","render","undefined","shuffledPosts","question"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nimport Question from './Question.js';\nimport Options from './Options.js';\nlet data = require('../data'); //this imports data from local file, pass it as a prop to Quiz component\n\nconst shuffleArray = array => { console.log(\"hello deep\")\n\tlet i = array.length - 1;\n\tfor (; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n\treturn array;\n}\nclass Quiz extends React.PureComponent{\n\tconstructor(props, context) {\n\t    super(props, context);\n\t    this.state = {\n\t    \tdata:\"\"\n\t    }\n\t\tthis.loadQuestionsFromServer = this.loadQuestionsFromServer.bind(this);\n\t}\n\tloadQuestionsFromServer() {\n\t\tfetch(this.props.url)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data=>{\n\t\t    \tthis.setState({ data });\n\t\t\t})\n    }\n\n\tcomponentWillMount() {\n\t\tthis.loadQuestionsFromServer();\n    }\n\n\trender () { \n\t\tif(this.state.data===\"\" || this.state.data===undefined || this.state.data===null){\n    \t\treturn false;\n    \t}\n\t\tvar shuffledPosts = shuffleArray(this.state.data);\n\t\treturn <div> \n\t\t\t<div className=\"row posRelative\">\n\t\t\t\t<div className=\"col-md-10\">\n\t\t\t\t\t<Question data={shuffledPosts[0].question} />\n\t\t\t\t</div>\n\t\t\t\t\t<Options data={(shuffledPosts[0])} />\n\t\t\t</div>\n\t\t\t<div className=\"col-md-10 noPad\">\n\t\t\t\t<Link to=\"/\"><button className=\"marTop25 nextBtn btn pull-right\">Next Question</button></Link>\n\t\t\t\t<Link to=\"/addQuestion\"><button className=\"marTop25 nextBtn btn pull-left\">Add Question</button></Link>\n\t\t\t</div>\n\t\t</div>; \n\t}\n}\n\n\n// Quiz.PropTypes = {\n// \tbooks: PropTypes.bool.isRequired,\n// }\n// Book.PropTypes = {\n// \tb: PropTypes.string\n// }\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}